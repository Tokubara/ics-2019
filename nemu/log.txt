obj:在ubuntu上能make ISA=x86 run
exe:
make ISA=x86 run &> make_error_log.txt
out:ubuntu上执行make ISA=x86 run, 得到的报错是关于: libSDL2-2.0.so.0
看Makefile, 这是由-lSDL2引起的
ref:https://stackoverflow.com/questions/29711336/libsdl2-2-0-so-0-cannot-open-shared-object-file
exe:
sudo apt install libsdl2-dev
make ISA=x86 run &> make_error_log.txt # 卡住了
make ISA=x86 run # 运行成功

obj:用ctags, 但是不想要riscv32和mips32下的
中间的错误:

command! Ctags !ctags -R --languages=c,asm,sh,python --exclude ./src/isa/mips32 --exclude ./src/isa/riscv3 # 两个错误, exclude后面没有=, 以及./
command! Ctags !ctags -R --languages=c,asm,sh,python --exclude=./src/isa/mips32 --exclude=./src/isa/riscv3 # 不能用./
command! Ctags !ctags -R --languages=c,asm,sh,python --exclude=src/isa/mips32 --exclude=src/isa/riscv32 # 的确是没有riscv32的问题了, 但是IMAGE_START这个宏也找不到了
ctags -R --exclude=src/isa/mips32 --exclude=src/isa/riscv32 * # 可以, 既有宏又没有riscv的干扰
ctags -R --languages=c,asm,sh,python --exclude=src/isa/mips32 --exclude=src/isa/riscv32 *
ctags -R --exclude=src/isa/mips32 --exclude=src/isa/riscv32 # 也可以
ctags --list-maps=c # 只有*.cc
ctags --list-maps=c++ # 有*.h, 没有*.c
conclude:应该是command! Ctags !ctags -R --exclude=src/isa/mips32 --exclude=src/isa/riscv32

find . -type d -name mips32
./src/isa/mips32
./tools/qemu-diff/src/isa/mips32
不过发现tools/qemu-diff还是会有干扰
修改vimrc
command! Ctags !ctags -R --exclude=src/isa/{mips32,riscv32} --exclude=tools/qemu-diff --exclude=tools/qemu-diff/src/isa/{mips32,riscv32}

添加了bashrc, 这样比如通过run, 就可以绕开make run进行交互式运行


src/monitor/debug/ui.c:9:10: fatal error: readline/history.h: No such file or directory
 #include <readline/history.h>
          ^~~~~~~~~~~~~~~~~~~~
sudo apt-get install libreadline-dev 
不再报错
ls /usr/include/ | grep readline
readline
因此在include下的确出现了readline

想用gdb调试
make gdb


make ARCH=x86-nemu ALL=dummy # 改了Makefile, 目的是只生成Makefile.dummy
make -s -f Makefile.dummy ARCH=x86-nemu run -n # 其实之前已经存过了, 在make_dummy_run_log.txt make_dummy_run_output.txt下

在/media/psf/Home/Playground/ics2019/nexus-am/tests/cputest中, 运行
make ALL=dummy run
结果(报错):
/media/psf/Home/Playground/ics2019/nexus-am/am/build/am-native.a: member /media/psf/Home/Playground/ics
2019/nexus-am/am/build/am-native.a(/) in archive is not an object
collect2: error: ld returned 1 exit status
/media/psf/Home/Playground/ics2019/nexus-am/am/arch/native.mk:16: recipe for target 'image' failed
make[1]: *** [image] Error 1
Makefile:13: recipe for target 'Makefile.dummy' failed
make: [Makefile.dummy] Error 2 (ignored)
# -@rm -f Makefile.dummy
 dummy

[ERROR LOG]
在/media/psf/Home/Playground/ics2019/nexus-am/tests/cputest中, 运行
我怀疑是因为make命令没有给ARCH参数造成的
make ALL=dummy ARCH=x86-nemu run
还是报错
In file included from /usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h:9:0,
                 from /media/psf/Home/Playground/ics2019/nexus-am/am/am.h:9,
                 from /media/psf/Home/Playground/ics2019/nexus-am/am/src/nemu-common/trm.c:1:
/usr/include/stdint.h:26:10: fatal error: bits/libc-header-start.h: No such file or directory
 #include <bits/libc-header-start.h>
          ^~~~~~~~~~~~~~~~~~~~~~~~~~
compilation terminated.
/media/psf/Home/Playground/ics2019/nexus-am/Makefile.compile:25: recipe for target '/media/psf/Home/Playground/ics2019/nexus-am/am/build/x86-nemu//src/nemu-common/trm.o' failed

第一个问题是, 为什么会有两份stdint.h, 上面提到了两份:
/usr/lib/gcc/x86_64-linux-gnu/7/include/stdint.h, 看内容, 不会是因为这个
/usr/include/stdint.h, 的确有/usr/include/stdint.h, 但是这个头文件我可是经常用的
它的确就是出现了: #include <bits/libc-header-start.h>
但是bits目录并不在/usr/include/下
回答中也显示:
find /usr -name libc-header-start.h
/usr/include/x86_64-linux-gnu/bits/libc-header-start.h
[FIX]
sudo apt-get install gcc-multilib, fix

[ERROR LOG]
在/media/psf/Home/Playground/ics2019/nexus-am/tests/cputest中, 运行
make -s -f Makefile.dummy ARCH=x86-nemu run
是怎么run起来的? 之前也看了run, 并不像是能run起来的样子
Makefile:19: warning: overriding recipe for target 'run'
/media/psf/Home/Playground/ics2019/nexus-am/am/arch/platform/nemu.mk:27: warning: ignoring old recipe for target 'run'
有这样两个问题:
1. 哪里用了nemu.mk?
2. 为什么会override?

[CHANGE LOG]
nexus-am/tests/cputest/Makefile
在此目录下, make run/gdb即可运行dummy




